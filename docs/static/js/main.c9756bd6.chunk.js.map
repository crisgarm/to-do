{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","handleInputChange","handleTask","handleSelectChange","className","onSubmit","ev","preventDefault","type","value","onChange","target","Todo","text","id","completed","handleDeleteTask","handleCompletedTask","onClick","TodoList","tasks","todoItem","filteredTasks","map","task","App","useState","setInputText","setTasks","tasksFilter","setTasksFilter","setFilteredTasks","useEffect","getFromLocalStorage","handlerFilteredTasks","setLocalStorage","localStorage","setItem","JSON","stringify","getItem","parse","filter","input","uuidv4","select","taskId","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9756bd6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({\r\n  inputText,\r\n  handleInputChange,\r\n  handleTask,\r\n  handleSelectChange,\r\n}) => {\r\n  const inputChange = (ev) => {\r\n    handleInputChange(ev.target.value);\r\n  };\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    handleTask();\r\n  };\r\n\r\n  const handleChange = (ev) => {\r\n    handleSelectChange(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form__input\"\r\n        value={inputText}\r\n        onChange={inputChange}\r\n      />\r\n      <button className=\"form__button\" type=\"submit\">\r\n        Add\r\n      </button>\r\n      <div className=\"form__selectContainer\">\r\n        <select onChange={handleChange} className=\"form__select\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({\r\n  text,\r\n  id,\r\n  completed,\r\n  handleDeleteTask,\r\n  handleCompletedTask,\r\n}) => {\r\n  const deleteTask = () => {\r\n    handleDeleteTask(id);\r\n  };\r\n\r\n  const completedTask = () => {\r\n    handleCompletedTask(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className={`todoList__item-text ${completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </p>\r\n      <div className=\"todoList__item-container\">\r\n        <button className=\"todoList__item-btnCheck\" onClick={completedTask}>\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className=\"todoList__item-btnTrash\" onClick={deleteTask}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({\r\n  tasks,\r\n  handleDeleteTask,\r\n  handleCompletedTask,\r\n  filteredTasks,\r\n}) => {\r\n  const todoItem = filteredTasks.map((task) => {\r\n    return (\r\n      <li key={task.id} className=\"todoList__item\">\r\n        <Todo\r\n          text={task.text}\r\n          id={task.id}\r\n          completed={task.completed}\r\n          handleDeleteTask={handleDeleteTask}\r\n          handleCompletedTask={handleCompletedTask}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n  return <ul className=\"todoList\">{todoItem}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"../stylesheets/App.scss\";\nimport Form from \"./Form\";\nimport TodoList from \"./TodoList\";\n\nconst App = () => {\n  //STATES\n  const [inputText, setInputText] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [tasksFilter, setTasksFilter] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  //USE EFFECT\n  useEffect(() => {\n    getFromLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    handlerFilteredTasks();\n    setLocalStorage();\n  }, [tasks, tasksFilter]);\n\n  //LOCAL STORAGE\n  const setLocalStorage = () => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  const getFromLocalStorage = () => {\n    if (localStorage.getItem(\"tasks\") === null) {\n      localStorage.setItem(\"tasks\", JSON.stringify([]));\n    } else {\n      setTasks(JSON.parse(localStorage.getItem(\"tasks\")));\n    }\n  };\n\n  //FUNCTIONS\n  const handlerFilteredTasks = () => {\n    switch (tasksFilter) {\n      case \"completed\":\n        setFilteredTasks(tasks.filter((task) => task.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTasks(tasks.filter((task) => task.completed === false));\n        break;\n      default:\n        setFilteredTasks(tasks);\n        break;\n    }\n  };\n\n  const handleInputChange = (input) => {\n    setInputText(input);\n  };\n\n  const handleTask = () => {\n    setTasks([...tasks, { text: inputText, completed: false, id: uuidv4() }]);\n    setInputText(\"\");\n  };\n\n  const handleDeleteTask = (taskId) => {\n    setTasks(tasks.filter((item) => item.id !== taskId));\n  };\n\n  const handleCompletedTask = (taskId) => {\n    setTasks(\n      tasks.map((item) => {\n        if (item.id === taskId) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleSelectChange = (select) => {\n    setTasksFilter(select);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1 className=\"header__title\">Things to do</h1>\n      </header>\n      <main>\n        <Form\n          inputText={inputText}\n          handleInputChange={handleInputChange}\n          tasks={tasks}\n          handleTask={handleTask}\n          handleSelectChange={handleSelectChange}\n        />\n        <TodoList\n          tasks={tasks}\n          handleDeleteTask={handleDeleteTask}\n          handleCompletedTask={handleCompletedTask}\n          filteredTasks={filteredTasks}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}